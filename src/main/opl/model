 using CP;

 int f = ...;
 int h = ...;
 int c = ...;
 int mini = ...;

 range F = 1..f;
 range H = 1..h;
 range C = 1..c;
 range A = 1..2;

 int scores[F][H]= ...;
 int dispoF[F][A]= ...;
 int dispoH[H][A]= ...;

 dvar int rencontres[F][H][C] in 0..1;
 dexpr int attentes = -(h*f - sum(f in F, c in C, h in H ) rencontres[f][h][c]);
 dexpr int maxScores = sum(f in F, h in H, c in C) scores[f][h] * rencontres[f][h][c];
 maximize attentes + maxScores;

 subject to {
 	forall(f in F, h in H, c in C){
		if(scores[f][h] == 0){
			rencontres[f][h][c] == 0;
 		}
	}
 	forall(f in F, h in H){
 		(sum(c in C) rencontres[f][h][c]) <= 1;
 	}
	forall(f in F){
		(sum(h in H, c in C) rencontres[f][h][c]) >= mini;
	}
	forall(h in H){
		(sum(f in F, c in C) rencontres[f][h][c]) >= mini;
	}
	forall(f in F, c in C){
		(sum(h in H) rencontres[f][h][c]) <= 1;
	}
	forall(h in H, c in C){
		(sum(f in F) rencontres[f][h][c]) <= 1;
	}
}